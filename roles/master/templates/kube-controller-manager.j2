KUBE_LOGTOSTDERR="--logtostderr=false"
KUBE_LOG_LEVEL="--v=2"
KUBE_LOG_DIR="--log-dir=/var/log/kubernetes"
KUBE_MASTER="--master=http://127.0.0.1:8080"
# --root-ca-file="": If set, this root certificate authority will be included in
# service account's token secret. This must be a valid PEM-encoded CA bundle.
KUBE_CONTROLLER_MANAGER_ROOT_CA_FILE="--root-ca-file=/etc/kubernetes/ssl/ca.pem"
# --service-account-private-key-file="": Filename containing a PEM-encoded private
# RSA key used to sign service account tokens.
KUBE_CONTROLLER_MANAGER_SERVICE_ACCOUNT_PRIVATE_KEY_FILE="--service-account-private-key-file=/etc/kubernetes/ssl/ca-key.pem"
# --leader-elect: Start a leader election client and gain leadership before 
# executing the main loop. Enable this when running replicated components for high availability.
KUBE_LEADER_ELECT="--leader-elect=true"

## Add your own!
KUBE_CONTROLLER_ARGS="--bind-address=127.0.0.1 \
--allocate-node-cidrs=true \
--service-cluster-ip-range={{SERVICE_CIDR}} \
--cluster-cidr={{CLUSTER_CIDR}} \
--cluster-name=kubernetes \
--cluster-signing-cert-file=/etc/kubernetes/ssl/ca.pem \
--cluster-signing-key-file=/etc/kubernetes/ssl/ca-key.pem \
--horizontal-pod-autoscaler-use-rest-clients=true \
--node-monitor-grace-period=30s \
--node-monitor-period=4s \
--node-startup-grace-period=32s \
--pod-eviction-timeout=120s \
--controllers=*"
